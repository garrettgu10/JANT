NewScript.java> 001004cc: stp x29,x30,[sp, #-0x10]!
NewScript.java>     (unique, 0x7a70, 8) COPY (register, 0x40e8, 8)
NewScript.java>     (unique, 0x7a80, 8) COPY (register, 0x40f0, 8)
NewScript.java>     (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xfffffffffffffff0, 8)
NewScript.java>      ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0x7a70, 8)
NewScript.java>     (unique, 0x7a90, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8)
NewScript.java>      ---  STORE (const, 0x1b1, 4) , (unique, 0x7a90, 8) , (unique, 0x7a80, 8)
NewScript.java> 001004d0: mov x29,sp
NewScript.java>     (register, 0x40e8, 8) COPY (register, 0x8, 8)
NewScript.java> 001004d4: ldur x16,[x0]
NewScript.java>     (unique, 0xd40, 8) COPY (register, 0x4000, 8)
NewScript.java>     (register, 0x4080, 8) LOAD (const, 0x1b1, 4) , (unique, 0xd40, 8)
NewScript.java> 001004d8: ldur x16,[x16]
NewScript.java>     (unique, 0xd40, 8) COPY (register, 0x4080, 8)
NewScript.java>     (register, 0x4080, 8) LOAD (const, 0x1b1, 4) , (unique, 0xd40, 8)
NewScript.java> 001004dc: cmp sp,x16
NewScript.java>     (unique, 0xb20, 8) COPY (register, 0x4080, 8)
NewScript.java>     (register, 0x105, 1) INT_LESSEQUAL (register, 0x4080, 8) , (register, 0x8, 8)
NewScript.java>     (register, 0x106, 1) INT_SBORROW (register, 0x8, 8) , (register, 0x4080, 8)
NewScript.java>     (unique, 0x4170, 8) INT_SUB (register, 0x8, 8) , (register, 0x4080, 8)
NewScript.java>     (register, 0x107, 1) INT_SLESS (unique, 0x4170, 8) , (const, 0x0, 8)
NewScript.java>     (register, 0x108, 1) INT_EQUAL (unique, 0x4170, 8) , (const, 0x0, 8)
NewScript.java>     (register, 0x100, 1) COPY (register, 0x107, 1)
NewScript.java>     (register, 0x101, 1) COPY (register, 0x108, 1)
NewScript.java>     (register, 0x102, 1) COPY (register, 0x105, 1)
NewScript.java>     (register, 0x103, 1) COPY (register, 0x106, 1)
NewScript.java> 001004e0: b.cs 0x001004e8
NewScript.java>      ---  CBRANCH (ram, 0x1004e8, 1) , (register, 0x102, 1)
NewScript.java> 001004e8: sub sp,sp,#0x20
NewScript.java>     (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x20, 8)
NewScript.java> 001004ec: stp x19,x20,[sp]
NewScript.java>     (unique, 0x7a70, 8) COPY (register, 0x4098, 8)
NewScript.java>     (unique, 0x7a80, 8) COPY (register, 0x40a0, 8)
NewScript.java>     (unique, 0xf80, 8) COPY (register, 0x8, 8)
NewScript.java>      ---  STORE (const, 0x1b1, 4) , (unique, 0xf80, 8) , (unique, 0x7a70, 8)
NewScript.java>     (unique, 0x7a90, 8) INT_ADD (unique, 0xf80, 8) , (const, 0x8, 8)
NewScript.java>      ---  STORE (const, 0x1b1, 4) , (unique, 0x7a90, 8) , (unique, 0x7a80, 8)
NewScript.java> 001004f0: stp x22,x23,[sp, #0x10]
NewScript.java>     (unique, 0x7a70, 8) COPY (register, 0x40b0, 8)
NewScript.java>     (unique, 0x7a80, 8) COPY (register, 0x40b8, 8)
NewScript.java>     (unique, 0xf70, 8) INT_ADD (register, 0x8, 8) , (const, 0x10, 8)
NewScript.java>      ---  STORE (const, 0x1b1, 4) , (unique, 0xf70, 8) , (unique, 0x7a70, 8)
NewScript.java>     (unique, 0x7a90, 8) INT_ADD (unique, 0xf70, 8) , (const, 0x8, 8)
NewScript.java>      ---  STORE (const, 0x1b1, 4) , (unique, 0x7a90, 8) , (unique, 0x7a80, 8)
NewScript.java> 001004f4: mov x19,x0
NewScript.java>     (register, 0x4098, 8) COPY (register, 0x4000, 8)
NewScript.java> 001004f8: mov x20,x2
NewScript.java>     (register, 0x40a0, 8) COPY (register, 0x4010, 8)
NewScript.java> 001004fc: ldur x0,[x19, #0x20]
NewScript.java>     (unique, 0xd30, 8) INT_ADD (register, 0x4098, 8) , (const, 0x20, 8)
NewScript.java>     (register, 0x4000, 8) LOAD (const, 0x1b1, 4) , (unique, 0xd30, 8)
NewScript.java> 00100500: ldr x22,[x0]
NewScript.java>     (unique, 0xd00, 8) COPY (register, 0x4000, 8)
NewScript.java>     (register, 0x40b0, 8) LOAD (const, 0x1b1, 4) , (unique, 0xd00, 8)
NewScript.java> 00100504: mov x23,#0x0
NewScript.java>     (register, 0x40b8, 8) COPY (const, 0x0, 8)
NewScript.java> 00100508: cmp w23,w20
NewScript.java>     (register, 0x105, 1) INT_LESSEQUAL (register, 0x40a0, 4) , (register, 0x40b8, 4)
NewScript.java>     (register, 0x106, 1) INT_SBORROW (register, 0x40b8, 4) , (register, 0x40a0, 4)
NewScript.java>     (unique, 0x4290, 4) INT_SUB (register, 0x40b8, 4) , (register, 0x40a0, 4)
NewScript.java>     (register, 0x107, 1) INT_SLESS (unique, 0x4290, 4) , (const, 0x0, 4)
NewScript.java>     (register, 0x108, 1) INT_EQUAL (unique, 0x4290, 4) , (const, 0x0, 4)
NewScript.java>     (register, 0x100, 1) COPY (register, 0x107, 1)
NewScript.java>     (register, 0x101, 1) COPY (register, 0x108, 1)
NewScript.java>     (register, 0x102, 1) COPY (register, 0x105, 1)
NewScript.java>     (register, 0x103, 1) COPY (register, 0x106, 1)
NewScript.java>     (unique, 0x140, 1) MULTIEQUAL (unique, 0x140, 1) , (unique, 0x140, 1)
NewScript.java>     (unique, 0x160, 1) MULTIEQUAL (unique, 0x160, 1) , (unique, 0x160, 1)
NewScript.java>     (unique, 0xb10, 8) MULTIEQUAL (unique, 0xb10, 8) , (unique, 0xb10, 8)
NewScript.java>     (unique, 0xd30, 8) MULTIEQUAL (unique, 0xd30, 8) , (unique, 0xd30, 8)
NewScript.java>     (unique, 0xe00, 8) MULTIEQUAL (unique, 0xe00, 8) , (unique, 0xe00, 8)
NewScript.java>     (unique, 0xeb0, 8) MULTIEQUAL (unique, 0xeb0, 8) , (unique, 0xeb0, 8)
NewScript.java>     (unique, 0x2350, 4) MULTIEQUAL (unique, 0x2350, 4) , (unique, 0x2350, 4)
NewScript.java>     (unique, 0x2370, 4) MULTIEQUAL (unique, 0x2370, 4) , (unique, 0x2370, 4)
NewScript.java>     (unique, 0x23d0, 8) MULTIEQUAL (unique, 0x23d0, 8) , (unique, 0x23d0, 8)
NewScript.java>     (unique, 0x23f0, 8) MULTIEQUAL (unique, 0x23f0, 8) , (unique, 0x23f0, 8)
NewScript.java>     (unique, 0x2430, 4) MULTIEQUAL (unique, 0x2430, 4) , (unique, 0x2430, 4)
NewScript.java>     (unique, 0x2450, 4) MULTIEQUAL (unique, 0x2450, 4) , (unique, 0x2450, 4)
NewScript.java>     (unique, 0x41c0, 4) MULTIEQUAL (unique, 0x41c0, 4) , (unique, 0x41c0, 4)
NewScript.java>     (unique, 0x41e0, 4) MULTIEQUAL (unique, 0x41e0, 4) , (unique, 0x41e0, 4)
NewScript.java>     (unique, 0x4290, 4) MULTIEQUAL (unique, 0x4290, 4) , (unique, 0x4290, 4)
NewScript.java>     (unique, 0x50b0, 4) MULTIEQUAL (unique, 0x50b0, 4) , (unique, 0x50b0, 4)
NewScript.java>     (unique, 0x5140, 4) MULTIEQUAL (unique, 0x5140, 4) , (unique, 0x5140, 4)
NewScript.java>     (unique, 0x7aa0, 4) MULTIEQUAL (unique, 0x7aa0, 4) , (unique, 0x7aa0, 4)
NewScript.java>     (unique, 0x7b30, 4) MULTIEQUAL (unique, 0x7b30, 4) , (unique, 0x7b30, 4)
NewScript.java>     (unique, 0x7b40, 1) MULTIEQUAL (unique, 0x7b40, 1) , (unique, 0x7b40, 1)
NewScript.java>     (unique, 0x7c00, 8) MULTIEQUAL (unique, 0x7c00, 8) , (unique, 0x7c00, 8)
NewScript.java>     (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)
NewScript.java>     (register, 0x100, 1) MULTIEQUAL (register, 0x100, 1) , (register, 0x100, 1)
NewScript.java>     (register, 0x101, 1) MULTIEQUAL (register, 0x101, 1) , (register, 0x101, 1)
NewScript.java>     (register, 0x102, 1) MULTIEQUAL (register, 0x102, 1) , (register, 0x102, 1)
NewScript.java>     (register, 0x103, 1) MULTIEQUAL (register, 0x103, 1) , (register, 0x103, 1)
NewScript.java>     (register, 0x105, 1) MULTIEQUAL (register, 0x105, 1) , (register, 0x105, 1)
NewScript.java>     (register, 0x106, 1) MULTIEQUAL (register, 0x106, 1) , (register, 0x106, 1)
NewScript.java>     (register, 0x107, 1) MULTIEQUAL (register, 0x107, 1) , (register, 0x107, 1)
NewScript.java>     (register, 0x108, 1) MULTIEQUAL (register, 0x108, 1) , (register, 0x108, 1)
NewScript.java>     (register, 0x4000, 8) MULTIEQUAL (register, 0x4000, 8) , (register, 0x4000, 8)
NewScript.java>     (register, 0x4008, 8) MULTIEQUAL (register, 0x4008, 8) , (register, 0x4008, 8)
NewScript.java>     (register, 0x4010, 8) MULTIEQUAL (register, 0x4010, 8) , (register, 0x4010, 8)
NewScript.java>     (register, 0x4080, 8) MULTIEQUAL (register, 0x4080, 8) , (register, 0x4080, 8)
NewScript.java>     (register, 0x40a0, 4) SUBPIECE (register, 0x40a0, 8) , (const, 0x0, 4)
NewScript.java>     (register, 0x40a0, 4) SUBPIECE (register, 0x40a0, 8) , (const, 0x0, 4)
NewScript.java>     (register, 0x40a0, 4) SUBPIECE (register, 0x40a0, 8) , (const, 0x0, 4)
NewScript.java>     (register, 0x40b8, 4) SUBPIECE (register, 0x40b8, 8) , (const, 0x0, 4)
NewScript.java>     (register, 0x40b8, 4) SUBPIECE (register, 0x40b8, 8) , (const, 0x0, 4)
NewScript.java>     (register, 0x40b8, 4) SUBPIECE (register, 0x40b8, 8) , (const, 0x0, 4)
NewScript.java>     (register, 0x40b8, 8) MULTIEQUAL (register, 0x40b8, 8) , (register, 0x40b8, 8)
NewScript.java>     (register, 0x40f0, 8) MULTIEQUAL (register, 0x40f0, 8) , (register, 0x40f0, 8)
NewScript.java> 0010050c: b.cc 0x00100524
NewScript.java>     (unique, 0x160, 1) BOOL_NEGATE (register, 0x102, 1)
NewScript.java>      ---  CBRANCH (ram, 0x100524, 1) , (unique, 0x160, 1)
NewScript.java> 00100510: ldp x19,x20,[sp]
NewScript.java>     (unique, 0xf80, 8) COPY (register, 0x8, 8)
NewScript.java>     (register, 0x4098, 8) LOAD (const, 0x1b1, 4) , (unique, 0xf80, 8)
NewScript.java>     (unique, 0x5040, 8) INT_ADD (unique, 0xf80, 8) , (const, 0x8, 8)
NewScript.java>     (register, 0x40a0, 8) LOAD (const, 0x1b1, 4) , (unique, 0x5040, 8)
NewScript.java> 00100514: ldp x22,x23,[sp, #0x10]
NewScript.java>     (unique, 0xf70, 8) INT_ADD (register, 0x8, 8) , (const, 0x10, 8)
NewScript.java>     (register, 0x40b0, 8) LOAD (const, 0x1b1, 4) , (unique, 0xf70, 8)
NewScript.java>     (unique, 0x5040, 8) INT_ADD (unique, 0xf70, 8) , (const, 0x8, 8)
NewScript.java>     (register, 0x40b8, 8) LOAD (const, 0x1b1, 4) , (unique, 0x5040, 8)
NewScript.java> 00100518: mov sp,x29
NewScript.java>     (register, 0x8, 8) COPY (register, 0x40e8, 8)
NewScript.java> 0010051c: ldp x29,x30,[sp], #0x10
NewScript.java>     (unique, 0xf90, 8) COPY (register, 0x8, 8)
NewScript.java>     (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x10, 8)
NewScript.java>     (register, 0x40e8, 8) LOAD (const, 0x1b1, 4) , (unique, 0xf90, 8)
NewScript.java>     (unique, 0x5040, 8) INT_ADD (unique, 0xf90, 8) , (const, 0x8, 8)
NewScript.java>     (register, 0x40f0, 8) LOAD (const, 0x1b1, 4) , (unique, 0x5040, 8)
NewScript.java> 00100520: ret
NewScript.java>     (register, 0x0, 8) COPY (register, 0x40f0, 8)
NewScript.java>      ---  RETURN (register, 0x0, 8)
NewScript.java> 00100524: ldur w0,[x19, #0x80]
NewScript.java>     (unique, 0xd30, 8) INT_ADD (register, 0x4098, 8) , (const, 0x80, 8)
NewScript.java>     (unique, 0x50b0, 4) LOAD (const, 0x1b1, 4) , (unique, 0xd30, 8)
NewScript.java>     (register, 0x4000, 8) INT_ZEXT (unique, 0x50b0, 4)
NewScript.java> 00100528: ldur w1,[x19, #0x40]
NewScript.java>     (unique, 0xd30, 8) INT_ADD (register, 0x4098, 8) , (const, 0x40, 8)
NewScript.java>     (unique, 0x50b0, 4) LOAD (const, 0x1b1, 4) , (unique, 0xd30, 8)
NewScript.java>     (register, 0x4008, 8) INT_ZEXT (unique, 0x50b0, 4)
NewScript.java> 0010052c: add w0,w0,w1
NewScript.java>     (unique, 0x2430, 4) COPY (register, 0x4008, 4)
NewScript.java>     (register, 0x105, 1) INT_CARRY (register, 0x4000, 4) , (unique, 0x2430, 4)
NewScript.java>     (register, 0x106, 1) INT_SCARRY (register, 0x4000, 4) , (unique, 0x2430, 4)
NewScript.java>     (unique, 0x2450, 4) INT_ADD (register, 0x4000, 4) , (unique, 0x2430, 4)
NewScript.java>     (register, 0x107, 1) INT_SLESS (unique, 0x2450, 4) , (const, 0x0, 4)
NewScript.java>     (register, 0x108, 1) INT_EQUAL (unique, 0x2450, 4) , (const, 0x0, 4)
NewScript.java>     (register, 0x4000, 8) INT_ZEXT (unique, 0x2450, 4)
NewScript.java>     (register, 0x4000, 4) SUBPIECE (register, 0x4000, 8) , (const, 0x0, 4)
NewScript.java>     (register, 0x4000, 4) SUBPIECE (register, 0x4000, 8) , (const, 0x0, 4)
NewScript.java>     (register, 0x4000, 4) SUBPIECE (register, 0x4000, 8) , (const, 0x0, 4)
NewScript.java>     (register, 0x4008, 4) SUBPIECE (register, 0x4008, 8) , (const, 0x0, 4)
NewScript.java> 00100530: ldur w1,[x19, #0xb0]
NewScript.java>     (unique, 0xd30, 8) INT_ADD (register, 0x4098, 8) , (const, 0xb0, 8)
NewScript.java>     (unique, 0x50b0, 4) LOAD (const, 0x1b1, 4) , (unique, 0xd30, 8)
NewScript.java>     (register, 0x4008, 8) INT_ZEXT (unique, 0x50b0, 4)
NewScript.java> 00100534: add w1,w1,w23
NewScript.java>     (unique, 0x2430, 4) COPY (register, 0x40b8, 4)
NewScript.java>     (register, 0x105, 1) INT_CARRY (register, 0x4008, 4) , (unique, 0x2430, 4)
NewScript.java>     (register, 0x106, 1) INT_SCARRY (register, 0x4008, 4) , (unique, 0x2430, 4)
NewScript.java>     (unique, 0x2450, 4) INT_ADD (register, 0x4008, 4) , (unique, 0x2430, 4)
NewScript.java>     (register, 0x107, 1) INT_SLESS (unique, 0x2450, 4) , (const, 0x0, 4)
NewScript.java>     (register, 0x108, 1) INT_EQUAL (unique, 0x2450, 4) , (const, 0x0, 4)
NewScript.java>     (register, 0x4008, 8) INT_ZEXT (unique, 0x2450, 4)
NewScript.java>     (register, 0x4008, 4) SUBPIECE (register, 0x4008, 8) , (const, 0x0, 4)
NewScript.java>     (register, 0x4008, 4) SUBPIECE (register, 0x4008, 8) , (const, 0x0, 4)
NewScript.java>     (register, 0x4008, 4) SUBPIECE (register, 0x4008, 8) , (const, 0x0, 4)
NewScript.java>     (register, 0x40b8, 4) SUBPIECE (register, 0x40b8, 8) , (const, 0x0, 4)
NewScript.java> 00100538: ldr w1,[x22, w1, UXTW #0x0]
NewScript.java>     (unique, 0xb10, 8) INT_ZEXT (register, 0x4008, 4)
NewScript.java>     (unique, 0xe00, 8) COPY (unique, 0xb10, 8)
NewScript.java>     (unique, 0xe00, 8) INT_LEFT (unique, 0xe00, 8) , (const, 0x0, 8)
NewScript.java>     (unique, 0xeb0, 8) INT_ADD (register, 0x40b0, 8) , (unique, 0xe00, 8)
NewScript.java>     (unique, 0x5140, 4) LOAD (const, 0x1b1, 4) , (unique, 0xeb0, 8)
NewScript.java>     (register, 0x4008, 8) INT_ZEXT (unique, 0x5140, 4)
NewScript.java>     (register, 0x4008, 4) SUBPIECE (register, 0x4008, 8) , (const, 0x0, 4)
NewScript.java> 0010053c: strb w1,[x22, w0, UXTW ]
NewScript.java>     (unique, 0x7b30, 4) COPY (register, 0x4008, 4)
NewScript.java>     (unique, 0xb10, 8) INT_ZEXT (register, 0x4000, 4)
NewScript.java>     (unique, 0xe00, 8) COPY (unique, 0xb10, 8)
NewScript.java>     (unique, 0xe00, 8) INT_LEFT (unique, 0xe00, 8) , (const, 0x0, 8)
NewScript.java>     (unique, 0xeb0, 8) INT_ADD (register, 0x40b0, 8) , (unique, 0xe00, 8)
NewScript.java>     (unique, 0x7b40, 1) SUBPIECE (unique, 0x7b30, 4) , (const, 0x0, 4)
NewScript.java>      ---  STORE (const, 0x1b1, 4) , (unique, 0xeb0, 8) , (unique, 0x7b40, 1)
NewScript.java>     (register, 0x4000, 4) SUBPIECE (register, 0x4000, 8) , (const, 0x0, 4)
NewScript.java>     (register, 0x4008, 4) SUBPIECE (register, 0x4008, 8) , (const, 0x0, 4)
NewScript.java> 00100540: ldur w0,[x19, #0x40]
NewScript.java>     (unique, 0xd30, 8) INT_ADD (register, 0x4098, 8) , (const, 0x40, 8)
NewScript.java>     (unique, 0x50b0, 4) LOAD (const, 0x1b1, 4) , (unique, 0xd30, 8)
NewScript.java>     (register, 0x4000, 8) INT_ZEXT (unique, 0x50b0, 4)
NewScript.java> 00100544: add w0,w0,#0x1
NewScript.java>     (unique, 0x2350, 4) COPY (const, 0x1, 4)
NewScript.java>     (register, 0x105, 1) INT_CARRY (register, 0x4000, 4) , (unique, 0x2350, 4)
NewScript.java>     (register, 0x106, 1) INT_SCARRY (register, 0x4000, 4) , (unique, 0x2350, 4)
NewScript.java>     (unique, 0x2370, 4) INT_ADD (register, 0x4000, 4) , (unique, 0x2350, 4)
NewScript.java>     (register, 0x107, 1) INT_SLESS (unique, 0x2370, 4) , (const, 0x0, 4)
NewScript.java>     (register, 0x108, 1) INT_EQUAL (unique, 0x2370, 4) , (const, 0x0, 4)
NewScript.java>     (register, 0x4000, 8) INT_ZEXT (unique, 0x2370, 4)
NewScript.java>     (register, 0x4000, 4) SUBPIECE (register, 0x4000, 8) , (const, 0x0, 4)
NewScript.java>     (register, 0x4000, 4) SUBPIECE (register, 0x4000, 8) , (const, 0x0, 4)
NewScript.java>     (register, 0x4000, 4) SUBPIECE (register, 0x4000, 8) , (const, 0x0, 4)
NewScript.java> 00100548: stur w0,[x19, #0x40]
NewScript.java>     (unique, 0x7aa0, 4) COPY (register, 0x4000, 4)
NewScript.java>     (unique, 0xd30, 8) INT_ADD (register, 0x4098, 8) , (const, 0x40, 8)
NewScript.java>      ---  STORE (const, 0x1b1, 4) , (unique, 0xd30, 8) , (unique, 0x7aa0, 4)
NewScript.java>     (register, 0x4000, 4) SUBPIECE (register, 0x4000, 8) , (const, 0x0, 4)
NewScript.java> 0010054c: ldur w0,[x19, #0x40]
NewScript.java>     (unique, 0xd30, 8) INT_ADD (register, 0x4098, 8) , (const, 0x40, 8)
NewScript.java>     (unique, 0x50b0, 4) LOAD (const, 0x1b1, 4) , (unique, 0xd30, 8)
NewScript.java>     (register, 0x4000, 8) INT_ZEXT (unique, 0x50b0, 4)
NewScript.java> 00100550: cmp w0,#0x40
NewScript.java>     (unique, 0x41c0, 4) COPY (const, 0x40, 4)
NewScript.java>     (register, 0x105, 1) INT_LESSEQUAL (const, 0x40, 4) , (register, 0x4000, 4)
NewScript.java>     (register, 0x106, 1) INT_SBORROW (register, 0x4000, 4) , (const, 0x40, 4)
NewScript.java>     (unique, 0x41e0, 4) INT_SUB (register, 0x4000, 4) , (unique, 0x41c0, 4)
NewScript.java>     (register, 0x107, 1) INT_SLESS (unique, 0x41e0, 4) , (const, 0x0, 4)
NewScript.java>     (register, 0x108, 1) INT_EQUAL (unique, 0x41e0, 4) , (const, 0x0, 4)
NewScript.java>     (register, 0x100, 1) COPY (register, 0x107, 1)
NewScript.java>     (register, 0x101, 1) COPY (register, 0x108, 1)
NewScript.java>     (register, 0x102, 1) COPY (register, 0x105, 1)
NewScript.java>     (register, 0x103, 1) COPY (register, 0x106, 1)
NewScript.java>     (register, 0x4000, 4) SUBPIECE (register, 0x4000, 8) , (const, 0x0, 4)
NewScript.java>     (register, 0x4000, 4) SUBPIECE (register, 0x4000, 8) , (const, 0x0, 4)
NewScript.java>     (register, 0x4000, 4) SUBPIECE (register, 0x4000, 8) , (const, 0x0, 4)
NewScript.java> 00100554: b.ne 0x00100588
NewScript.java>     (unique, 0x140, 1) BOOL_NEGATE (register, 0x101, 1)
NewScript.java>      ---  CBRANCH (ram, 0x100588, 1) , (unique, 0x140, 1)
NewScript.java> 00100558: mov x0,x19
NewScript.java>     (register, 0x4000, 8) COPY (register, 0x4098, 8)
NewScript.java> 0010055c: mov x1,x19
NewScript.java>     (register, 0x4008, 8) COPY (register, 0x4098, 8)
NewScript.java> 00100560: ldr x2,0x100568
NewScript.java>     (register, 0x4010, 8) LOAD (const, 0x1b1, 4) , (const, 0x100568, 8)
NewScript.java> 00100564: b 0x00100570
NewScript.java>      ---  BRANCH (ram, 0x100570, 1)
NewScript.java> 00100570: blr x2
NewScript.java>     (register, 0x0, 8) COPY (register, 0x4010, 8)
NewScript.java>     (register, 0x40f0, 8) INT_ADD (const, 0x100570, 8) , (const, 0x4, 8)
NewScript.java>      ---  CALLIND (register, 0x0, 8)
NewScript.java>     (register, 0x0, 8) INDIRECT (register, 0x0, 8) , (const, 0x8c, 4)
NewScript.java>     (register, 0x100, 1) INDIRECT (register, 0x100, 1) , (const, 0x8c, 4)
NewScript.java>     (register, 0x101, 1) INDIRECT (register, 0x101, 1) , (const, 0x8c, 4)
NewScript.java>     (register, 0x102, 1) INDIRECT (register, 0x102, 1) , (const, 0x8c, 4)
NewScript.java>     (register, 0x103, 1) INDIRECT (register, 0x103, 1) , (const, 0x8c, 4)
NewScript.java>     (register, 0x105, 1) INDIRECT (register, 0x105, 1) , (const, 0x8c, 4)
NewScript.java>     (register, 0x106, 1) INDIRECT (register, 0x106, 1) , (const, 0x8c, 4)
NewScript.java>     (register, 0x107, 1) INDIRECT (register, 0x107, 1) , (const, 0x8c, 4)
NewScript.java>     (register, 0x108, 1) INDIRECT (register, 0x108, 1) , (const, 0x8c, 4)
NewScript.java>     (register, 0x4000, 8) INDIRECT (register, 0x4000, 8) , (const, 0x8c, 4)
NewScript.java>     (register, 0x4008, 8) INDIRECT (register, 0x4008, 8) , (const, 0x8c, 4)
NewScript.java>     (register, 0x4010, 8) INDIRECT (register, 0x4010, 8) , (const, 0x8c, 4)
NewScript.java>     (register, 0x4080, 8) INDIRECT (const, 0x0, 8) , (const, 0x8c, 4)
NewScript.java> 00100574: ldur x0,[x19, #0x50]
NewScript.java>     (unique, 0xd30, 8) INT_ADD (register, 0x4098, 8) , (const, 0x50, 8)
NewScript.java>     (register, 0x4000, 8) LOAD (const, 0x1b1, 4) , (unique, 0xd30, 8)
NewScript.java> 00100578: add x0,x0,#0x200
NewScript.java>     (unique, 0x23d0, 8) COPY (const, 0x200, 8)
NewScript.java>     (register, 0x105, 1) INT_CARRY (register, 0x4000, 8) , (unique, 0x23d0, 8)
NewScript.java>     (register, 0x106, 1) INT_SCARRY (register, 0x4000, 8) , (unique, 0x23d0, 8)
NewScript.java>     (unique, 0x23f0, 8) INT_ADD (register, 0x4000, 8) , (unique, 0x23d0, 8)
NewScript.java>     (register, 0x107, 1) INT_SLESS (unique, 0x23f0, 8) , (const, 0x0, 8)
NewScript.java>     (register, 0x108, 1) INT_EQUAL (unique, 0x23f0, 8) , (const, 0x0, 8)
NewScript.java>     (register, 0x4000, 8) COPY (unique, 0x23f0, 8)
NewScript.java> 0010057c: stur x0,[x19, #0x50]
NewScript.java>     (unique, 0x7c00, 8) COPY (register, 0x4000, 8)
NewScript.java>     (unique, 0xd30, 8) INT_ADD (register, 0x4098, 8) , (const, 0x50, 8)
NewScript.java>      ---  STORE (const, 0x1b1, 4) , (unique, 0xd30, 8) , (unique, 0x7c00, 8)
NewScript.java> 00100580: mov x0,#0x0
NewScript.java>     (register, 0x4000, 8) COPY (const, 0x0, 8)
NewScript.java> 00100584: stur w0,[x19, #0x40]
NewScript.java>     (unique, 0x7aa0, 4) COPY (register, 0x4000, 4)
NewScript.java>     (unique, 0xd30, 8) INT_ADD (register, 0x4098, 8) , (const, 0x40, 8)
NewScript.java>      ---  STORE (const, 0x1b1, 4) , (unique, 0xd30, 8) , (unique, 0x7aa0, 4)
NewScript.java>     (register, 0x4000, 4) SUBPIECE (register, 0x4000, 8) , (const, 0x0, 4)
NewScript.java> 00100588: add w23,w23,#0x1
NewScript.java>     (unique, 0x2350, 4) COPY (const, 0x1, 4)
NewScript.java>     (register, 0x105, 1) INT_CARRY (register, 0x40b8, 4) , (unique, 0x2350, 4)
NewScript.java>     (register, 0x106, 1) INT_SCARRY (register, 0x40b8, 4) , (unique, 0x2350, 4)
NewScript.java>     (unique, 0x2370, 4) INT_ADD (register, 0x40b8, 4) , (unique, 0x2350, 4)
NewScript.java>     (register, 0x107, 1) INT_SLESS (unique, 0x2370, 4) , (const, 0x0, 4)
NewScript.java>     (register, 0x108, 1) INT_EQUAL (unique, 0x2370, 4) , (const, 0x0, 4)
NewScript.java>     (register, 0x40b8, 8) INT_ZEXT (unique, 0x2370, 4)
NewScript.java>     (unique, 0xd30, 8) MULTIEQUAL (unique, 0xd30, 8) , (unique, 0xd30, 8)
NewScript.java>     (unique, 0x23d0, 8) MULTIEQUAL (unique, 0x23d0, 8) , (unique, 0x23d0, 8)
NewScript.java>     (unique, 0x23f0, 8) MULTIEQUAL (unique, 0x23f0, 8) , (unique, 0x23f0, 8)
NewScript.java>     (unique, 0x7aa0, 4) MULTIEQUAL (unique, 0x7aa0, 4) , (unique, 0x7aa0, 4)
NewScript.java>     (unique, 0x7c00, 8) MULTIEQUAL (unique, 0x7c00, 8) , (unique, 0x7c00, 8)
NewScript.java>     (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)
NewScript.java>     (register, 0x100, 1) MULTIEQUAL (register, 0x100, 1) , (register, 0x100, 1)
NewScript.java>     (register, 0x101, 1) MULTIEQUAL (register, 0x101, 1) , (register, 0x101, 1)
NewScript.java>     (register, 0x102, 1) MULTIEQUAL (register, 0x102, 1) , (register, 0x102, 1)
NewScript.java>     (register, 0x103, 1) MULTIEQUAL (register, 0x103, 1) , (register, 0x103, 1)
NewScript.java>     (register, 0x105, 1) MULTIEQUAL (register, 0x105, 1) , (register, 0x105, 1)
NewScript.java>     (register, 0x106, 1) MULTIEQUAL (register, 0x106, 1) , (register, 0x106, 1)
NewScript.java>     (register, 0x107, 1) MULTIEQUAL (register, 0x107, 1) , (register, 0x107, 1)
NewScript.java>     (register, 0x108, 1) MULTIEQUAL (register, 0x108, 1) , (register, 0x108, 1)
NewScript.java>     (register, 0x4000, 8) MULTIEQUAL (register, 0x4000, 8) , (register, 0x4000, 8)
NewScript.java>     (register, 0x4008, 8) MULTIEQUAL (register, 0x4008, 8) , (register, 0x4008, 8)
NewScript.java>     (register, 0x4010, 8) MULTIEQUAL (register, 0x4010, 8) , (register, 0x4010, 8)
NewScript.java>     (register, 0x4080, 8) MULTIEQUAL (register, 0x4080, 8) , (register, 0x4080, 8)
NewScript.java>     (register, 0x40b8, 4) SUBPIECE (register, 0x40b8, 8) , (const, 0x0, 4)
NewScript.java>     (register, 0x40b8, 4) SUBPIECE (register, 0x40b8, 8) , (const, 0x0, 4)
NewScript.java>     (register, 0x40b8, 4) SUBPIECE (register, 0x40b8, 8) , (const, 0x0, 4)
NewScript.java>     (register, 0x40f0, 8) MULTIEQUAL (register, 0x40f0, 8) , (register, 0x40f0, 8)
NewScript.java> 0010058c: b 0x00100508
NewScript.java>      ---  BRANCH (ram, 0x100508, 1)